# vi:syntax=ruby

class StonkComponent
  def initialize(sprite)
    @sprite = sprite
  end

  def sprite
    @sprite
  end
end

class GoodStonkComponent < StonkComponent
end

class DiamondHandComponent < GoodStonkComponent
end

class FenceSystem
  def initialize(store)
    @store = store
    @selector = store.watch(PositionComponent, VelocityComponent)
  end

  def process(gt, dt, sw, sh)
    @selector.each { |e, p, v|
      if p.x < 0
        p.x = 0
        v.invertX
      end

      if p.x > sw
        p.x = sw
        v.invertX
      end

      if p.y < 0
        p.y = 0
        v.invertY
      end

      if p.y > sh
        p.y = sh
        v.invertY
      end
    }
  end
end

Wkndr.nonce {
  Wkndr.client_side { |gl|
    gl.open_default_view!
    gl.lookat(1, 45.0, 33.0, 45.0, 0.0, 0.1, 0.0, 40.0)

    @store = StorageManager.new
    @fence = FenceSystem.new(@store)
    @movement = MovementSystem.new(@store)
    @diamond = SpriteComponent.new("resources/diamondhands.png")
    @good_stonk = SpriteComponent.new("resources/gme.png")

    @spawn_proc = Proc.new { |x, y, l|
      if (l == 1)
        8.times {
          @store.add(
            (rand > 0.999) ? DiamondHandComponent.new(@diamond) : GoodStonkComponent.new(@good_stonk),
            PositionComponent.new(x - 64, y - 32, 0),
            VelocityComponent.from_angle(rand * 2.0 * 3.14).mul((rand * 300.0) + 50.0),
            RandomColorComponent.new
          )
        }
      end
    }
    
    @good_stonks = @store.watch(GoodStonkComponent, PositionComponent, RandomColorComponent)
    @diamond_hands = @store.watch(DiamondHandComponent, PositionComponent, RandomColorComponent)
  }
}

Wkndr.client_side { |gl|
  gl.event { |channel, msg|
    case channel
      when "spawn"
        @spawn_proc.call(*msg) if (@spawn_proc && @store)
    end
  }

  gl.update { |global_time, delta_time, sw, sh|
    gl.mousep { |xyl|
      x, y, l = *xyl

      spawn_proc_args = [
        x,
        y,
        l
      ]

      @spawn_proc.call(*spawn_proc_args)
      gl.emit({"spawn" => spawn_proc_args})
    }

    gl.drawmode {
      gl.twod {
        @good_stonks.each { |e, stonk, p, c|
          gl.draw_texture(stonk.sprite, p.x, p.y, p.z, *c.color)
        }

        @diamond_hands.each { |e, stonk, p, c|
          gl.draw_texture(stonk.sprite, p.x, p.y, p.z, *c.color)
        }

        msg = (@diamond_hands.length > 0) ? ("KEEP HOLDING!") : ((@good_stonks.length > 0) ? "HOLD FOR DIAMONDS" : "CLICK TO BUY")
        gl.label("#{msg}: diamond hands: %d @ $%f ... I LIKE THESE STONKS" % [@diamond_hands.length, @good_stonks.length * (10.0  * global_time)])
      }
    }

    @fence.process(global_time, delta_time, sw, sh)
    @movement.process(global_time, delta_time)
  }
}


Wkndr.server_side { |gl, server|
  server.wsb("/") do |cn, phr|
  end

  server.raw("/status") do |cn, phr|
    Protocol.ok("ONLINE\n")
  end

  server.raw("/about") do |cn, phr|
    mab = Markaby::Builder.new
    mab.html5 "lang" => "en" do
      mab.head do
        mab.title "about"
      end

      mab.body do
        mab.h1 "buy and hold stonks you like"
      end
    end
    Protocol.ok(mab.to_s)
  end
}
